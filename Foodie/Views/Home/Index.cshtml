@model IEnumerable<Foodie.Models.Product>

@{
    ViewData["Title"] = "Products";
}

<style>
    .product-card {
        border: 1px solid #e0e0e0;
        border-radius: 8px;
        transition: transform 0.3s ease-in-out;
    }

    .product-card:hover {
        transform: translateY(-5px);
        box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.1);
    }

    .card-title {
        font-size: 1.1rem;
        font-weight: bold;
        margin-bottom: 0.5rem;
    }

    .card-text {
        font-size: 1rem;
        color: #666;
    }

    .btn {
        font-size: 0.9rem;
        font-weight: bold;
    }

    .btn-block {
        margin-top: 2rem;
    }

    .card-img-top {
        width: 100%;
        height: 150px;
        object-fit: cover;
    }

    media (max-width: 768px) {
        .card-title {
            font-size: 1rem;
        }

        .card-text {
            font-size: 0.9rem;
        }

        .btn {
            font-size: 0.85rem;
        }
    }

    .carousel-item img {
        width: 100%;
        height: 500px;
        object-fit: cover;
    }

    .carousel {
        width: 100vw;
        position: relative;
        left: 50%;
        right: 50%;
        margin-left: -50vw;
        margin-right: -50vw;
        z-index: 1;
    }

    .carousel-wrapper {
        position: relative;
        top: -50px;
        z-index: -1;
    }

    .container {
        position: relative;
        z-index: 2;
    }

    .hidden-carousel {
        display: none;
    }

    * {
        margin: 0;
        padding: 0;
    }

    #productSearch {
        border-radius: 20px;
        padding: 10px 20px;
        font-size: 1rem;
        border: 1px solid #ccc;
        transition: border-color 0.3s ease;
    }

    #productSearch:focus {
        outline: none;
        border-color: #007bff;
        box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
    }

    body {
        background: linear-gradient(135deg, #f6d365 0%, #fda085 50%, #fbc7d4 100%);
    }
</style>

<div class="carousel-wrapper" id="carouselWrapper">
    <div id="offerCarousel" class="carousel slide mb-0" data-bs-ride="carousel">
        <div class="carousel-inner">
            <div class="carousel-item active">
                <img src="~/asset/OfferImage/1.jpg" class="d-block w-100" alt="Offer 1">
            </div>
            <div class="carousel-item">
                <img src="~/asset/OfferImage/2.jpg" class="d-block w-100" alt="Offer 2">
            </div>
            <div class="carousel-item">
                <img src="~/asset/OfferImage/3.jpg" class="d-block w-100" alt="Offer 3">
            </div>
        </div>
        <a class="carousel-control-prev" href="#offerCarousel" role="button" data-bs-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Previous</span>
        </a>
        <a class="carousel-control-next" href="#offerCarousel" role="button" data-bs-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Next</span>
        </a>
    </div>
</div>

<div class="container mt-0">
    <h1 class="text-center mb-2">Our Products</h1>
    <input type="search" id="productSearch" placeholder="Search for products" class="form-control mb-4"/>
    <div class="row" id="productList">
        @foreach (var product in Model)
        {
                <div class="col-lg-2 col-md-4 col-sm-6 mb-4 product-item" data-name="@product.ProductName">
                    <div class="card h-100 product-card">
                    @if (product.ImageData != null && product.ImageData.Length > 0)
                    {
                        var base64Image = Convert.ToBase64String(product.ImageData);
                                <img src="data:image/jpeg;base64,@base64Image" class="card-img-top img-fluid" alt="Product Image">
                    }
                        <div class="card-body">
                            <h5 class="card-title text-truncate">@product.ProductName</h5>
                            <p class="card-text">Price: Rs. @product.Price</p>
                            <form class="add-to-cart-form" data-product-id="@product.Id">
                                <button type="submit" class="btn btn-primary btn-block">Add to Cart</button>
                            </form>
                        </div>
                    </div>
                </div>
        }
    </div>
</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script>
    document.getElementById('productSearch').addEventListener('input', function() {
        var query = this.value.toLowerCase();
        var products = document.querySelectorAll('.product-item');
        var carousel = document.getElementById('carouselWrapper');

        if (query) {
            carousel.classList.add('hidden-carousel');
        } else {
            carousel.classList.remove('hidden-carousel');
        }

        products.forEach(function(product) {
            var name = product.getAttribute('data-name').toLowerCase();
            if (name.includes(query)) {
                product.style.display = 'block';
            } else {
                product.style.display = 'none';
            }
        });
    });

    $(document).ready(function() {
        $('.add-to-cart-form').on('submit', function(event) {
            event.preventDefault();
            var form = $(this);
            var productId = form.data('product-id');

            $.ajax({
                type: 'POST',
                url: '@Url.Action("AddToCart", "Home")',
                data: { productId: productId },
                success: function(response) {
                    if (response.success) {
                        $('#cart-count').text(response.cartItemCount);
                    } else if (response.redirectUrl) {
                        window.location.href = response.redirectUrl;
                    } else {
                        alert('Error: ' + response.message);
                    }
                },
                error: function() {
                    alert('An error occurred while adding the product to the cart.');
                }
            });
        });
    });
</script>
